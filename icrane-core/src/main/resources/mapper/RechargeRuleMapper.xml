<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bfei.icrane.core.dao.RechargeRuleMapper">
    <resultMap id="BaseResultMap" type="com.bfei.icrane.core.models.RechargeRule">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="coin" property="coin" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, price, coin, sort
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from recharge_rule
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from recharge_rule
        ORDER BY sort
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recharge_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.bfei.icrane.core.models.RechargeRule">
    insert into recharge_rule (id, price, coin, 
      sort, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{coin,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bfei.icrane.core.models.RechargeRule">
        insert into recharge_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="coin != null">
                coin,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="coin != null">
                #{coin,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bfei.icrane.core.models.RechargeRule">
        update recharge_rule
        <set>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="coin != null">
                coin = #{coin,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bfei.icrane.core.models.RechargeRule">
    update recharge_rule
    set price = #{price,jdbcType=DECIMAL},
      coin = #{coin,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>