<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bfei.icrane.core.dao.DollOrderItemDao">
    <resultMap id="BaseResultMap" type="com.bfei.icrane.core.models.DollOrderItem">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="doll_code" jdbcType="VARCHAR" property="dollCode"/>
        <association property="dollOrder" javaType="com.bfei.icrane.core.models.DollOrder">
            <id property="id" column="order_id"/>
            <result property="status" column="status"/>
            <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
            <result column="order_date" jdbcType="TIMESTAMP" property="orderDate"/>
            <result column="stock_valid_date" jdbcType="TIMESTAMP" property="stockValidDate"/>
            <result column="modifiedDate" jdbcType="TIMESTAMP" property="modifiedDate"/>
            <result column="deliver_date" jdbcType="TIMESTAMP" property="deliverDate"/>
            <result column="deliver_method" jdbcType="VARCHAR" property="deliverMethod"/>
            <result column="deliver_number" jdbcType="VARCHAR" property="deliverNumber"/>
            <result column="deliver_amount" jdbcType="DECIMAL" property="deliverAmount"/>
            <result column="deliver_coins" jdbcType="INTEGER" property="deliverCoins"/>
            <result column="doll_redeem_coins" jdbcType="INTEGER" property="dollRedeemCoins"/>
        </association>
        <association property="doll" javaType="com.bfei.icrane.core.models.Doll">
            <id property="id" column="id"/>
            <id property="dollID" jdbcType="VARCHAR" column="doll_ID"/>
            <result property="name" column="name"/>
            <result property="redeemCoins" jdbcType="INTEGER" column="redeem_coins"/>
            <result property="tbimgRealPath" jdbcType="VARCHAR" column="tbimg_real_path"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
		id, order_id, doll_id, created_date,doll_code
	</sql>
    <!-- 根据订单id查询 -->
    <select id="getOrderItemByOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
            a.*, b. NAME NAME,
            b.tbimg_real_path
        FROM
            t_doll_order_item a
        LEFT JOIN t_doll b ON a.doll_code = b.doll_ID
        WHERE
            a.order_id = #{orderId};
	</select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_doll_order_item
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByDollId" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_doll_order_item
        where doll_code = #{dollCode,jdbcType=VARCHAR}
    </select>

    <select id="selectByMemberId" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        SELECT
        a.*, b.*, b.modified_date modifiedDate,
        c.id AS doll_id,
        ifnull(dinfo.dollName, c. NAME) NAME,
        IFNULL(
        b.doll_redeem_coins,
        c.redeem_coins
        ) redeem_coins,
        ifnull(
        dinfo.img_url,
        c.tbimg_real_path
        ) tbimg_real_path
        FROM
        t_doll_order_item a
        INNER JOIN t_doll_order b ON a.order_id = b.id
        LEFT JOIN t_doll c ON a.doll_id = c.id
        LEFT JOIN doll_info dinfo ON dinfo.dollCode = a.doll_code
        WHERE
        b.order_by = #{memberId,jdbcType=INTEGER}
        ORDER BY
        order_date DESC;
	</select>

    <select id="selectByMemberIdOrderStatus" resultMap="BaseResultMap">
        SELECT
        a.*, b.*, b.modified_date modifiedDate,
        c.id AS doll_id,
        a.doll_name AS NAME,
        IFNULL(
        b.doll_redeem_coins,
        c.redeem_coins
        ) redeem_coins,
        a.doll_url AS
         tbimg_real_path
        FROM
        t_doll_order_item a
        INNER JOIN t_doll_order b ON a.order_id = b.id
        LEFT JOIN t_doll c ON a.doll_id = c.id
        LEFT JOIN doll_info dinfo ON dinfo.dollCode = a.doll_code
        WHERE
        b.order_by = #{memberId,jdbcType=INTEGER}
        AND b. STATUS = #{orderStatus,jdbcType=VARCHAR}
        ORDER BY
        order_date DESC;
    </select>

    <select id="selectByOrderItem" parameterType="com.bfei.icrane.core.models.DollOrderItem"
            resultMap="BaseResultMap">
        select
        item.id,item.doll_id,item.quantity
        FROM `t_doll_order_item` item
        LEFT JOIN `t_doll_order` dorder ON(item.order_id = dorder.id)
        <where>
            dorder.id
            <foreach collection="orderIds" item="orderId" open="in ("
                     close=")" separator=",">
                #{orderId}
            </foreach>
            AND dorder.`status`='寄存中'
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_doll_order_item
		where id = #{id,jdbcType=BIGINT}
	</delete>
    <insert id="insert" parameterType="com.bfei.icrane.core.models.DollOrderItem">
		insert into t_doll_order_item (id, order_id, doll_id,
		created_date,quantity,doll_code,doll_url,doll_name)
		values (#{id,jdbcType=BIGINT}, #{dollOrder.id,jdbcType=BIGINT},
		#{doll.id,jdbcType=INTEGER},
		#{createdDate,jdbcType=TIMESTAMP},#{quantity,jdbcType=INTEGER},#{doll.dollID,jdbcType=VARCHAR},
		#{doll.tbimgRealPath,jdbcType=VARCHAR},#{doll.name,jdbcType=VARCHAR})
	</insert>
    <insert id="insertSelective" parameterType="com.bfei.icrane.core.models.DollOrderItem">
        insert into t_doll_order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="dollId != null">
                doll_id,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="dollCode != null">
                doll_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="dollId != null">
                #{dollId,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="dollCode != null">
                #{dollCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bfei.icrane.core.models.DollOrderItem">
        update t_doll_order_item
        <set>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bfei.icrane.core.models.DollOrderItem">
		update t_doll_order_item
		set order_id = #{orderId,jdbcType=BIGINT},
		doll_id = #{dollId,jdbcType=INTEGER},
		created_date = #{createdDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

    <update id="updateOrderId" parameterType="com.bfei.icrane.core.models.DollOrderItem">
		update t_doll_order_item
		set order_id = #{dollOrder.id,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>


