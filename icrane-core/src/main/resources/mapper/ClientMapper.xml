<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bfei.icrane.core.dao.ClientDao" >
  <resultMap id="BaseResultMap" type="com.bfei.icrane.core.models.Client" >
    <id column="id" property="id" />
    <result column="openId" property="openid" />
    <result column="concernTime" property="concerntime" />
    <result column="cancelConcernTime" property="cancelconcerntime" />
    <result column="status" property="status" />
    <result column="headImg" property="headimg" />
    <result column="nickname" property="nickname" />
  </resultMap>
  <sql id="base_where">

  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from client
    where id = #{id}
  </delete>
    <delete id="deleteByFromUserName">
    delete from client
    where openid = #{openid}
    </delete>
    <insert id="insert" parameterType="com.bfei.icrane.core.models.Client" useGeneratedKeys="true" keyProperty="id" >
    insert into client (openId, concernTime, cancelConcernTime, status, headImg, nickname
      )
    values (#{openid}, #{concerntime}, #{cancelconcerntime}, #{status}, #{headimg}, #{nickname}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bfei.icrane.core.models.Client" >
    update client
    set openId = #{openid},
      concernTime = #{concerntime},
      cancelConcernTime = #{cancelconcerntime},
      status = #{status},
      headImg = #{headimg},
      nickname = #{nickname}
    where id = #{id}
  </update>
    <update id="unConcerned">
      update client set status = #{status} ,cancelConcernTime = #{cancelconcerntime} where openId= #{openid}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, openId, concernTime, cancelConcernTime, status, headImg, nickname
    from client
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, openId, concernTime, cancelConcernTime, status, headImg, nickname
    from client
  </select>
  <!--<select id="query4count" resultType="java.lang.Integer">
      select count(*) from client
      <include refid="base_where"/>
  </select>
  <select id="query4list" resultType="com.bfei.icrane.core.models.Client">
    select * from client
    <include refid="base_where"/>
    limit #{beginIndex} ,#{rows}
  </select>-->
  <select id="selectByOpenId" resultMap="BaseResultMap">
    select * from client where openid= #{openid}
  </select>
</mapper>